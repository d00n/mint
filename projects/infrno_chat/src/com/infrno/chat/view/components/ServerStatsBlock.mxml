<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:mx="library://ns.adobe.com/flex/mx"
				 creationComplete="handleCreationComplete(event);"				 
				 >
	<fx:Script>
		<![CDATA[			
			import com.infrno.chat.model.vo.StatsVO;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Spacer;
			
			private var _serverStatsVO:StatsVO;
			private var _client_serverStatsVO:StatsVO;
			
			[Bindable]
			public var clientCount_label:String;
//			
//			[Bindable]
//			public var droppedFrames_label:String;
//			
//			[Bindable]
//			public var peer_enabled_label:String;
//			
//			[Bindable]
//			public var peer_capable_label:String;
//			
//			[Bindable]
//			public var use_peer_connection_label:String;
//			
//			[Bindable]
//			public var micLevel_label:String;
//			
//			[Bindable]
//			public var publishing_audio_label:String;
//			
//			[Bindable]
//			public var publishing_video_label:String;
//			
//			[Bindable]
//			public var user_name_label_id_toolTip:String;
			
			private var sparklineConfig_AC:ArrayCollection = new ArrayCollection();
//			private var labelConfig_AC:ArrayCollection = new ArrayCollection();

			private function initConfig():void{
				sparklineConfig_AC.addItem( {yFieldName:"FileInBytes", labelPrefix:"FileInBytes"} );
				sparklineConfig_AC.addItem( {yFieldName:"FileInBytesRate", labelPrefix:"FileInBytesRate"} );
//				sparklineConfig_AC.addItem( {yFieldName:"MessagesInBytes", labelPrefix:"msgInBytes"} );
				sparklineConfig_AC.addItem( {yFieldName:"MessagesInBytesRate", labelPrefix:"msgInBytesRate"} );
//				sparklineConfig_AC.addItem( {yFieldName:"MessagesInCount", labelPrefix:"msgInCount"} );
				sparklineConfig_AC.addItem( {yFieldName:"MessagesInCountRate", labelPrefix:"msgInCountRate"} );
				sparklineConfig_AC.addItem( {yFieldName:"MessagesLossBytes", labelPrefix:"msgLossBytes"} );
				sparklineConfig_AC.addItem( {yFieldName:"MessagesLossBytesRate", labelPrefix:"msgLossBytesRate"} );
				sparklineConfig_AC.addItem( {yFieldName:"MessagesLossCount", labelPrefix:"msgLossCount"} );
				sparklineConfig_AC.addItem( {yFieldName:"MessagesLossCountRate", labelPrefix:"msgLossCountRate"} );
//				sparklineConfig_AC.addItem( {yFieldName:"MessagesOutBytes", labelPrefix:"msgOutBytes"} );
				sparklineConfig_AC.addItem( {yFieldName:"MessagesOutBytesRate", labelPrefix:"msgOutBytesRate"} );
//				sparklineConfig_AC.addItem( {yFieldName:"MessagesOutCount", labelPrefix:"msgOutCount"} );
				sparklineConfig_AC.addItem( {yFieldName:"MessagesOutCountRate", labelPrefix:"msgOutCountRate"} );

			}			
			
//			public function set client_serverStatsVO(value:StatsVO):void{
//				if (serverSparkline_vgroup == null)
//					return;
//				
//				_client_serverStatsVO = value;
//				var sparkline:Sparkline;
//				for (var i:int=0; i<serverSparkline_vgroup.numChildren-1; i++){
//					sparkline = serverSparkline_vgroup.getChildAt(i) as Sparkline;
//					sparkline.statsVO = _client_serverStatsVO;
//					sparkline.lastValue_label = sparkline.lastValuePrefix +": "+ _client_serverStatsVO.lastDataRecord[sparkline.yFieldName];						
//				}				
//				
//				droppedFrames_label = "Dropped frames: " + _client_serverStatsVO.lastDataRecord['droppedFrames'];				
//			}
			
			public function set statsVO(value:StatsVO):void{
				if (serverSparkline_vgroup == null)
					return;
				
				_serverStatsVO = value;
				
				clientCount_label = "Client count: " + _serverStatsVO.lastDataRecord.client_count;
				
				var sparkline:Sparkline;					
				for (var i:int=0; i<serverSparkline_vgroup.numChildren-1; i++){
					sparkline = serverSparkline_vgroup.getChildAt(i) as Sparkline;
					sparkline.statsVO = _serverStatsVO;
					sparkline.lastValue_label = sparkline.lastValuePrefix +": "+ _serverStatsVO.lastDataRecord[sparkline.yFieldName];
				}				
			}	
			
			// TODO What is best place/time to do this?
			private function handleCreationComplete(event:Event):void	{	
				initConfig();
				createServerBlock();				
			}
			
			public function createServerBlock():void{					
				var yFieldName:String;
				var labelPrefix:String;
				var toolTip:String;
				var sparklineConfig:Object;
				for (var i:int = 0; i < sparklineConfig_AC.length; i++) {
					sparklineConfig = sparklineConfig_AC.getItemAt(i);
					yFieldName 			= sparklineConfig.yFieldName;
					labelPrefix 		= sparklineConfig.labelPrefix;
					toolTip 				= sparklineConfig.toolTip;
					createSparkline(serverSparkline_vgroup,yFieldName, labelPrefix, toolTip);
				}
			
				// without this, the last sparkline to be added does not display, although it's tooltip works
				serverSparkline_vgroup.addElement(new Spacer());	
			}
			
			// WARNING: instantiating Sparkline in the mediator causes the backward/outside container display bug
			public function createSparkline(sparkline_vgroup:VGroup, yFieldName:String, labelPrefix:String="", toolTip:String=""):void {
				var _sparkline:Sparkline 		= new Sparkline(); 
				_sparkline.yFieldName 			= yFieldName;
				_sparkline.lastValuePrefix 	= labelPrefix;
				_sparkline.toolTip			 		= toolTip;
				_sparkline.width 						= serverBlock_vgroup.width;
				
				sparkline_vgroup.addElement(_sparkline);	
			}						
			
			
		]]>
	</fx:Script>	
		<s:BorderContainer id="borderContainer"
											 backgroundColor="#FFFFFF" 
											 borderColor="#ececec"
											 width="100%" 
											 >
	
			<s:HGroup>			
				<s:VGroup id="serverBlock_vgroup" 	
									width="175" 
									>			
					
					<s:Label text="Server totals"
									 paddingTop="3"
									 paddingLeft="3"
									 paddingRight="3"
									 backgroundColor="0xFFFFFF" />	
					
					<s:Label text="{clientCount_label}"
									 fontSize="11"
									 paddingTop="1"
									 paddingLeft="1"
									 paddingBottom="8"
									 backgroundColor="0xFFFFFF" />	
					
					<s:VGroup id="serverSparkline_vgroup"  
										left="0" />
						
				</s:VGroup>
						
				<s:List id="clientStatsBlock_list" 
								itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
								horizontalCenter="0"
								verticalCenter="0"
								borderColor="#FFFFFF"
								>
					
					<s:layout>
						<s:HorizontalLayout gap="0"/>
					</s:layout>
					
					<s:dataProvider >
						<s:ArrayList>
						</s:ArrayList>
					</s:dataProvider>
					
				</s:List>			
				
			</s:HGroup>
			
		</s:BorderContainer>
	
</s:Group>
