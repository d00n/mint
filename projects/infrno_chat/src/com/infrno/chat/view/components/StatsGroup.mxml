<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:mx="library://ns.adobe.com/flex/mx"
				 resize="statsGroup_resizeHandler(event)"
				 >
	<fx:Script>
		<![CDATA[
			import com.infrno.chat.model.vo.StatsVO;
			
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			
			protected function statsGroup_resizeHandler(event:ResizeEvent):void	{
				statsGroup_list.width = this.width;
				statsGroup_list.height = this.height;
			}
			
			public function addStatsGroup(peerStatsVO:StatsVO): StatsBlock {
				var statsBlock:StatsBlock = new StatsBlock();
//				statsGroup.addEventListener(FlexEvent.CREATION_COMPLETE, onStatsGroup_creationComplete);
				statsBlock.suid = peerStatsVO.suid;
				statsBlock.peerStatsVO = peerStatsVO;
				statsGroup_list.dataProvider.addItem(statsBlock);
				
				statsBlock.sparkline1 = createSparkline("currentBytesPerSecond", peerStatsVO.suid);
				statsBlock.sparkline2 = statsBlock.createSparkline("currentBytesPerSecond");
				statsBlock.sparkline3 = statsBlock.createSparkline("currentBytesPerSecond");
				
				return statsBlock;
			}
			
			public function createSparkline(name:String, suid:int):Sparkline {
				var _sparkline:Sparkline = new Sparkline();
				_sparkline.toolTip = name;
				_sparkline.yFieldName = name;
				_sparkline.lastValue_label = name;
				
				var statsBlock:StatsBlock = getStatsBlockBySuid(suid);
				_sparkline.top = statsBlock.sparkline_count * _sparkline.height;	
				statsBlock.sparkline_count++;			
				
				//				sparklines_AC.addItem(_sparkline);
				statsBlock.borderContainer.addElement(_sparkline);	
				
				return _sparkline;
			}	
			
			private function getStatsBlockBySuid(suid:int): StatsBlock {
				trace("StatsGroupMediator.getStatsBySuid suid="+suid)
				
				var statsBlock:StatsBlock;
				var dataProviderLength:int = statsGroup_list.dataProvider.length;
				for(var i:int = 0; i < dataProviderLength; i++){
					trace("StatsGroupMediator.getStatsBlockBySuid i="+i+", statsGroup.statsGroup_list.dataProvider.length="+dataProviderLength)
					statsBlock = statsGroup_list.dataProvider.getItemAt(i) as StatsBlock;
					trace("StatsGroupMediator.getStatsBySuid statsBlock.suid="+statsBlock.suid)
					if (statsBlock.suid == suid) {
						return statsBlock;
					}
				}
				return null;
			}
			
		]]>
	</fx:Script>
	
	<s:List id="statsGroup_list" 
					width="162"
					itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"
					horizontalCenter="0"
					verticalCenter="0"
					>
		
		<s:layout>
			<s:TileLayout 
				horizontalGap="0"
				verticalGap="0" />
		</s:layout>
		
		<s:dataProvider >
			<s:ArrayList>
			</s:ArrayList>
		</s:dataProvider>
		
	</s:List>
	
</s:Group>
