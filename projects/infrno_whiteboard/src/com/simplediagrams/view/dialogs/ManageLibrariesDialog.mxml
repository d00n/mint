<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:components="com.simplediagrams.view.components.*"
			   title="Manage Libraries"		 
			   contentBackgroundColor="0xFFFFFF"
			   close="onClose()" 
			   width="800" height="500"
			   xmlns:local="*" >
	
	<fx:Script>
		<![CDATA[
			import com.simplediagrams.events.ApplicationEvent;
			import com.simplediagrams.events.LibraryEvent;
			import com.simplediagrams.model.LibraryManager;
			import com.simplediagrams.model.libraries.LibraryInfo;
			
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.DataGridEvent;
			
			[Bindable]
			[Inject]
			public var libraryManager:LibraryManager
			
			[Dispatcher]
			public var dispatcher:IEventDispatcher
			
			protected function onClose():void
			{			
				var evt:Event = new ApplicationEvent(ApplicationEvent.HIDE_MANAGE_LIBRARIES);
				dispatcher.dispatchEvent(evt);												
			}
			
			public function enableItem(item:Object, value:Boolean):void
			{   
				libInfo = item as LibraryInfo;
				var libEvent:LibraryEvent;
				if(value)
					libEvent = new LibraryEvent(LibraryEvent.ENABLE_LIBRARY);
				else
					libEvent = new LibraryEvent(LibraryEvent.DISABLE_LIBRARY);
				libEvent.libraryInfo = libInfo;
				dispatcher.dispatchEvent(libEvent);
			}
			
			private var libInfo:LibraryInfo;
			
			public function deleteItem(libraryObj:Object):void
			{   
				libInfo = libraryObj as LibraryInfo;
				Alert.show("Delete the " + libraryObj.displayName + "  library?", "Delete Library", Alert.OK | Alert.CANCEL, FlexGlobals.topLevelApplication as Sprite, onDeleteItemConfirm) 
			}
			
			public function export(libraryObj:Object):void
			{   
				libInfo = libraryObj as LibraryInfo;
				var libEvent:LibraryEvent = new LibraryEvent(LibraryEvent.EXPORT_LIBRARY);
				libEvent.libraryInfo = libInfo;
				dispatcher.dispatchEvent(libEvent);
				
			}
			
			protected function onDeleteItemConfirm(event:CloseEvent):void
			{
				if(event.detail == Alert.OK)
				{
					var libEvent:LibraryEvent = new LibraryEvent(LibraryEvent.REMOVE_LIBRARY);
					libEvent.libraryInfo = libInfo;
					dispatcher.dispatchEvent(libEvent);
				}
			}
			
			
			
			protected function onItemEditBegin(event:DataGridEvent):void
			{
				if(event.itemRenderer == null || event.itemRenderer.data.custom == false)
					event.preventDefault();
			}
			
			protected function onItemEditEnd(event:DataGridEvent):void
			{
				if(event.itemRenderer != null )
				{
					var libInfo:LibraryInfo = event.itemRenderer.data as LibraryInfo;
					var newValue:String = dgLibraries.itemEditorInstance[dgLibraries.columns[event.columnIndex].editorDataField];
					var oldValue:String = libInfo.displayName;
					
					if(newValue != oldValue)
					{
						var libEvent:LibraryEvent = new LibraryEvent(LibraryEvent.RENAME_LIBRARY);
						libEvent.libraryInfo = libInfo;
						libEvent.name = newValue;
						dispatcher.dispatchEvent(libEvent);
					}
				}
			}
			
			protected function onDone():void
			{
				onClose()
			}
			
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout  paddingLeft="0" paddingRight="0" paddingTop="0" paddingBottom="10"/>
	</s:layout>
	
	<components:CheckBoxDataGrid editable="true"
								 id="dgLibraries" 
								 width="100%" 
								 height="100%"
								 dataProvider="{libraryManager.librariesRegistry.libraries}"
								 itemEditBeginning="onItemEditBegin(event)" 
								 itemEditEnd="onItemEditEnd(event)"	>
		<components:columns>
			
			<mx:DataGridColumn editable="false" dataField="enabled" headerText="Display" width="60" >
				
				<mx:itemRenderer>
					<fx:Component>
						<mx:Box width="100%" height="100%" 
								horizontalAlign="center"
								verticalAlign="middle">
							<mx:CheckBox id="cbEnabled" selected="{data.enabled}" change="outerDocument.enableItem(data, cbEnabled.selected)" toolTip="Display the library in the library panel">
							</mx:CheckBox>
						</mx:Box>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			
			<mx:DataGridColumn editable="false" dataField="custom" headerText="Custom" width="60" >
				<mx:itemRenderer>
					<fx:Component>						
						<mx:Box horizontalAlign="center"  >
							<s:Image visible="{data.custom}" source="@Embed('assets/img/icons/tick.png')" toolTip="This is a custom library."/>
						</mx:Box>						
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			
			
			<mx:DataGridColumn editable="false" dataField="type" headerText="Background" width="60" >
				<mx:itemRenderer>
					<fx:Component>						
						<mx:Box horizontalAlign="center"  >
							<s:Image visible="{data.type=='backgrounds'}" source="@Embed('assets/img/icons/tick.png')" toolTip="This is a background library."/>
						</mx:Box>						
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			
			
			<mx:DataGridColumn  editable="false"
								dataField="name"
								headerText="Library Name"
								/>
			
			<mx:DataGridColumn editable="true"
							   dataField="displayName"
							   headerText="Display Name"
							   />
			
			
			<mx:DataGridColumn sortable="false"   editable="false" headerText="Delete" width="60" >
				<mx:itemRenderer>
					<fx:Component>						
						<mx:Box horizontalAlign="center" >
							<mx:Button click="outerDocument.deleteItem(data)" 
									   useHandCursor="true"
									   buttonMode="true"
									   width="16"
									   height="16"
									   upSkin="@Embed('assets/img/icons/delete.png')"
									   downSkin="@Embed('assets/img/icons/delete.png')" 
									   overSkin="@Embed('assets/img/icons/delete.png')"
									   toolTip="Delete this library."
									   />
						</mx:Box>						
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			
			<mx:DataGridColumn sortable="false"  editable="false" headerText="Export" width="60" >
				<mx:itemRenderer>
					<fx:Component>						
						<mx:Box horizontalAlign="center" >
							<mx:Button click="outerDocument.export(data)" 
									   useHandCursor="true"
									   buttonMode="true"
									   width="16"
									   height="16"
									   upSkin="@Embed('assets/img/icons/package_go.png')"
									   downSkin="@Embed('assets/img/icons/package_go.png')" 
									   overSkin="@Embed('assets/img/icons/package_go.png')"
									   toolTip="Export this library."
									   />
						</mx:Box>						
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			
		</components:columns>
		
	</components:CheckBoxDataGrid>

	<s:HGroup width="100%" paddingLeft="10" paddingRight="10" horizontalAlign="right">		
		<s:Button label="Done" click="onDone()" width="90" height="30" styleName="blueButton"/>
	</s:HGroup>
	
</s:TitleWindow>
