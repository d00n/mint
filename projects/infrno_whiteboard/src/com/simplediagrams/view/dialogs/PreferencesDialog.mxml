<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	xmlns:view="com.simplediagrams.view.*" 
	xmlns:dialogs="com.mcquilleninteractive.comfen.view.dialogs.*" 
   	backgroundColor="0xEEEEEE"
	contentBackgroundColor="0xEEEEEE"
	keyDown="onKeyDown(event)"
	title="Preferences"   
	creationComplete="{	this.closeButton.visible=false }"
	>
	
	<fx:Metadata>
		[Event(name="OK", type="flash.events.Event")]
		[Event(name='cancel', event='flash.events.Event')]
	</fx:Metadata>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="error"/>
	</s:states>
	
	
	<fx:Script>
		<![CDATA[
			import com.simplediagrams.events.BasecampEvent;
			import com.simplediagrams.events.SimpleDiagramsLoginEvent;
			import com.simplediagrams.events.YammerEvent;
			import com.simplediagrams.model.BasecampModel;
			import com.simplediagrams.model.SettingsModel;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			
			
			[Dispatcher]
			public var dispatcher:IEventDispatcher
			
			[Inject]
			public var basecampModel:BasecampModel
			
			[Inject]
			public var settingsModel:SettingsModel
			
			protected function onOK():void
			{				
				basecampModel.enableNotifications = this.cbxEnableNotifications.selected
				basecampModel.defaultMessageToPrivate = this.cbxDefaultBasecampMsgPrivate.selected
					
				settingsModel.defaultDiagramHeight = Number(txtHeight.text)
				settingsModel.defaultDiagramWidth = Number(txtWidth.text)
							
				var evt:Event = new Event("OK", true)
				dispatchEvent(evt)				
			}
			
			
			
			
			protected function onCancel():void
			{			
				var evt:Event = new Event(Event.CANCEL, true)
				dispatchEvent(evt)				
			}
			
			
			protected function onKeyDown(event:KeyboardEvent):void
			{
				if (event.keyCode == Keyboard.ENTER)
				{
					onOK()
				}
			}
			
			
			protected function onClearBasecampLogin():void
			{				
				var evt:BasecampEvent= new BasecampEvent(BasecampEvent.CLEAR_LOGIN_CREDENTIALS, true)
				dispatcher.dispatchEvent(evt)
				Alert.show("Basecamp login information cleared.")
			}
			
			protected function onClearYammerLogin():void
			{
				var evt:YammerEvent= new YammerEvent(YammerEvent.CLEAR_LOGIN_CREDENTIALS, true)
				dispatcher.dispatchEvent(evt)
				Alert.show("Yammer login information cleared.")
			}
			
			
			
			
			
		]]>
	</fx:Script>
	
	
	<s:layout>
		<s:VerticalLayout  paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10"  gap="0"/>
	</s:layout>
	
	<s:Group height="22" clipAndEnableScrolling="true">
		
		<s:layout>
			<s:BasicLayout/>
		</s:layout>
		
		<mx:TabBar id="tbrOptions" 	
				  dataProvider="{vstOptions}" 
				  styleName="tabbar"
				  tabWidth="90"
				  x="10"/>
			
	</s:Group>
	
	<mx:ViewStack id="vstOptions" 
				  selectedIndex="{tbrOptions.selectedIndex}" 
				  width="100%" height="100%" creationPolicy="all"
				   cornerRadius="5"
				   borderStyle="solid"
				   borderColor="#DDDDDD"
				  >
		
		
		<mx:VBox label="General" 
				 width="100%" 
				 height="100%" 
				 backgroundAlpha="1" 
				 backgroundColor="#FFFFFF"
				 borderColor="#FFFFFF"
				 cornerRadius="5"
				 borderStyle="solid"
				 paddingLeft="20" 
				 paddingRight="20" 
				 paddingTop="20" 
				 paddingBottom="20">
			
			<s:Label fontWeight="bold" text="Default diagram size"/>
			
			<s:HGroup width="100%">
				<s:Label text="Width:" paddingTop="8" width="90"/>
				<s:TextInput id="txtWidth" 
							 text="{settingsModel.defaultDiagramWidth}" 
							 width="90" 
							 selectable="true" 
							 maxChars="4"
							 restrict="0-9"/>				
			</s:HGroup>
			
			<s:HGroup width="100%">
				<s:Label text="Height:" paddingTop="8" width="90"/>
				<s:TextInput id="txtHeight" 
							 text="{settingsModel.defaultDiagramHeight}" 
							 width="90" 
							 selectable="true" 
							 maxChars="4"
							 restrict="0-9"/>				
			</s:HGroup>
			
			
			
		</mx:VBox>
		
		
		
		
		
		
		<mx:VBox label="Exporting" width="100%" height="100%" 
				 backgroundColor="#FFFFFF"
				 backgroundAlpha="1" 
				 cornerRadius="5"
				 borderStyle="solid"
				 borderColor="#FFFFFF"
				 paddingLeft="20" 
				 paddingRight="20" 
				 paddingTop="20" 
				 paddingBottom="20">
			
			
			<s:Label text="Basecamp Export" fontWeight="bold"/>
			<s:HGroup>
				<s:Label text="Basecamp Login:" width="180" paddingTop="8"/>
				<s:Button label="Clear" click="onClearBasecampLogin()" width="90" height="30"/>
			</s:HGroup>
			<s:HGroup>
				<s:Label text="Basecamp Notifications:" width="180" paddingTop="6"/>
				<s:CheckBox label="Enabled" id="cbxEnableNotifications" selected="{basecampModel.enableNotifications}" />
			</s:HGroup>		
			<s:HGroup>
				<s:Label text="Default messages to private:" width="180" paddingTop="6"/>
				<s:CheckBox id="cbxDefaultBasecampMsgPrivate" selected="{basecampModel.defaultMessageToPrivate}" />
			</s:HGroup>
			
			<mx:Spacer height="20"/>
			<s:Label text="Yammer Export" fontWeight="bold"/>
			<s:HGroup>
				<s:Label text="Yammer Login:" width="180" paddingTop="8"/>
				<s:Button label="Clear" click="onClearYammerLogin()" width="90" height="30"/>
			</s:HGroup>
			
			
		</mx:VBox>
		
		
		
		</mx:ViewStack>
		
		
		
		<s:VGroup width="100%" horizontalAlign="right" paddingTop="10">
			<s:HGroup>
				<s:Button id="btnCancel" label="CANCEL" click="onCancel()"  styleName="blueButton" width="90" height="30" />	
				<s:Button id="btnOK" label="OK" click="onOK()" styleName="blueButton" width="90" height="30"  />	
			</s:HGroup>
		</s:VGroup>
		
		
		
		
</s:TitleWindow>
