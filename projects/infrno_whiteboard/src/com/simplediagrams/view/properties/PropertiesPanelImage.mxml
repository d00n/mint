<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:components="com.simplediagrams.view.components.*"
		 >
	
	<s:layout>
		<s:HorizontalLayout paddingTop="3" paddingLeft="20" />
	</s:layout>	
	
	<fx:Script>
		<![CDATA[
			import com.simplediagrams.events.ImageStyleEvent;
			import com.simplediagrams.events.LineStyleEvent;
			import com.simplediagrams.events.MultiSelectEvent;
			import com.simplediagrams.events.SelectionEvent;
			import com.simplediagrams.model.DiagramModel;
			import com.simplediagrams.model.PropertiesPanelModel;
			import com.simplediagrams.model.SDImageModel;
			import com.simplediagrams.model.SDLineModel;
			import com.simplediagrams.model.SDObjectModel;
			import com.simplediagrams.model.SettingsModel;
			import com.simplediagrams.util.Logger;
			
			import mx.collections.ArrayCollection;
			import mx.events.PropertyChangeEvent;

			[Bindable]
			protected var _imageStylesAC:ArrayCollection = new ArrayCollection ( [ 	
				{label:"Plain", data:SDImageModel.STYLE_NONE },
				{label:"Border", data:SDImageModel.STYLE_BORDER },
				{label:"Tape", data:SDImageModel.STYLE_TAPE },
				{label:"Border & Tape", data:SDImageModel.STYLE_BORDER_AND_TAPE } ] );
						
			private var _propertiesModel:PropertiesPanelModel;
			
			[Bindable]
			[Inject]
			public function get propertiesModel():PropertiesPanelModel
			{
				return _propertiesModel;
			}
			
			public function set propertiesModel(value:PropertiesPanelModel):void
			{
				if(_propertiesModel)
					_propertiesModel.removeEventListener(PropertiesPanelModel.SELECTION_CHANGED, onSelectionChange);
				_propertiesModel = value;
				if(_propertiesModel)
					_propertiesModel.addEventListener(PropertiesPanelModel.SELECTION_CHANGED, onSelectionChange);
			}
			
			private function onSelectionChange(event:Event):void
			{
				if(_propertiesModel == null) return;
				if(ddlImageStyle)
				{
					var i:int = -1;
					for(i = 0; i < _imageStylesAC.length;i++)
					{
						if(_propertiesModel.imageStyle == _imageStylesAC.getItemAt(i).data)
						{
							break;
						}
					}
					ddlImageStyle.selectedIndex = i;
				}
			}
			
			protected function setImageStyleddl(styleName:String):void
			{
				if (styleName=="")
				{
					ddlImageStyle.selectedIndex= -1
					return
				}
				
				var len:uint = _imageStylesAC.length
				for (var i:uint=0;i<len;i++)
				{
					if (_imageStylesAC.getItemAt(i).data==styleName)
					{
						ddlImageStyle.selectedIndex = i
						return
					}
				}
			}
			
											
			
			protected function onImageStyleChange():void
			{				
				if (ddlImageStyle.selectedIndex==-1) return;
				var event:ImageStyleEvent = new ImageStyleEvent(ImageStyleEvent.IMAGE_STYLE_CHANGE, true);
				event.imageStyle = ddlImageStyle.selectedItem.data;
				dispatchEvent(event);
			}
		
			
		]]>
	</fx:Script>
	
	<s:Label text="Image style:" paddingTop="7" paddingLeft="3" />
	
	<s:DropDownList id="ddlImageStyle"				    
					dataProvider="{_imageStylesAC}"
					horizontalCenter="0"
					height="23"
					width="180"
					change="onImageStyleChange()"
					/>	
</s:Group>
